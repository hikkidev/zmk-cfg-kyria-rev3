/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keys_ru.h"

// Layers
#define L_DEFAULT 0

// Variables
#define _________ &trans
#define XXXXXXXXX &none
#define SMART_SHFT &bt_sh 0 0

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <200>;
            quick-release;
            ignore-modifiers;
        };

        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LC(C) C>, <&kp LS(C)>;
        };

        bt_sh: sticky_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&skq LSHIFT>, <&kp LSHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  ESC  |  Q  |  W  |  E  |  R  |  T  |                                   |  Y   |  U  |  I  |  O  |   P   |   \  |
        // |  TAB  |  A  |  S  |  D  |  F  |  G  |                                   |  H   |  J  |  K  |  L  |   ;   |   '  |
        // | SHIFT |  Z  |  X  |  C  |  V  |  B  |         |   -   |    |  -  |      |  N   |  M  |  ,  |  .  |   /   |      |
        //                     | ALT | CMD | RET |  SPACE  |  RET  |    |  -  | BSPC |      |     |     |
        enlang_layer {
            bindings = <
            &kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
            &kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B XXXXXXXXX &kp SPACE       XXXXXXXXX XXXXXXXXX &kp N &kp M  &kp COMMA &kp DOT &kp FSLH XXXXXXXXX
                        XXXXXXXXX &kp LALT &kp LCMD SMART_SHFT &kp RET        XXXXXXXXX &kp BACKSPACE  XXXXXXXXX XXXXXXXXX XXXXXXXXX
            >;
        };

        test_layer {
            bindings = <
            XXXXXXXXX &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                                              XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
            XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX                                              XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
            XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX      XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
                                          XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX      XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
            >;
        };

        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  ESC  |  Й  |  Ц  |  У  |  К  |  Е  |                                       |  Н  |  Г  |  Ш  |  Щ  |  З  |  Х  |
        // |  TAB  |  Ф  |  Ы  |  В  |  А  |  П  |                                       |  Р  |  О  |  Л  |  Д  |  Ж  |  Э  |
        // | SHIFT |  Я  |  Ч  |  С  |  М  |  И  |         |   -   |    |   -   |        |  Т  |  Ь  |  Б  |  Ю  |     |     |
        //                     |     | ALT | CMD |  SPACE  |  RET  |    |   -   |  BSPC  |     |     |     |
        //rulang_layer {
        //    bindings = <
        //    &kp ESC   &kp RU_CYRILLIC_SHORT_I &kp RU_CYRILLIC_TSE  &kp RU_CYRILLIC_U  &kp RU_CYRILLIC_KA &kp RU_CYRILLIC_IE                                           &kp RU_CYRILLIC_EN &kp RU_CYRILLIC_GHE       &kp RU_CYRILLIC_SHA &kp RU_CYRILLIC_SHCHA &kp RU_CYRILLIC_ZE  &kp RU_CYRILLIC_HA
        //    &kp TAB   &kp RU_CYRILLIC_EF      &kp RU_CYRILLIC_YERU &kp RU_CYRILLIC_VE &kp RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                                           &kp RU_CYRILLIC_ER &kp RU_CYRILLIC_O         &kp RU_CYRILLIC_EL  &kp RU_CYRILLIC_DE    &kp RU_CYRILLIC_ZHE &kp RU_CYRILLIC_E
        //    &kp LSHFT &kp RU_CYRILLIC_YA      &kp RU_CYRILLIC_CHE  &kp RU_CYRILLIC_ES &kp RU_CYRILLIC_EM &kp RU_CYRILLIC_I &to LAYER_EN XXXXXXXXX    XXXXXXXXX XXXXXXXXX &kp RU_CYRILLIC_TE &kp RU_CYRILLIC_SOFT_SIGN &kp RU_CYRILLIC_BE  &kp RU_CYRILLIC_YU    XXXXXXXXX XXXXXXXXX
        //                                                                                     XXXXXXXXX &kp LALT &kp LCMD &kp SPACE &kp RET      XXXXXXXXX &kp BACKSPACE XXXXXXXXX XXXXXXXXX XXXXXXXXX
        //    >;
        //};

        // game_layer {
        //      bindings = <
        //      &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                                              &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BACKSPACE
        //      &kp TAB &kp LSHFT &kp Q &kp W &kp E &kp R                                              &kp T &kp Y &kp UP_ARROW &kp I &kp O &kp ENTER
        //      &kp LCMD &kp LCTRL &kp A &kp S &kp D &kp F &kp G &kp H      &kp J &kp K &kp L &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp P XXXXXXXXX
        //                           &kp Z &kp X &kp C &kp SPACE &kp V      &kp B &kp N &kp M XXXXXXXXX XXXXXXXXX
        //      >;
        // };

        // LAYER TEMPLATES

        // layer_name {
        //     bindings = <
        //     _________ _________ _________ _________ _________ _________                                              _________ _________ _________ _________ _________ _________
        //     _________ _________ _________ _________ _________ _________                                              _________ _________ _________ _________ _________ _________
        //     _________ _________ _________ _________ _________ _________ _________ _________      _________ _________ _________ _________ _________ _________ _________ _________
        //                                   _________ _________ _________ _________ _________      _________ _________ _________ _________ _________
        //     >;
        // };

        // layer_name {
        //     bindings = <
        //     XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX                                              XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
        //     XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX                                              XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
        //     XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX      XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
        //                                   XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX      XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX XXXXXXXXX
        //     >;
        // };
    };
};
