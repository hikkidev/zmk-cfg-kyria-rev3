#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_ru.h"

// KB
#define ___ &trans
#define XXX &none

// OS Hotkeys
#define MOD(keycode) LG(keycode)
#define OS_EN MOD(LA(N1))
#define OS_RU MOD(LA(N2))
#define OS_NEXT_LANG MOD(SPACE)

#define OS_KB_EN &kp OS_EN
#define OS_KB_RU &kp OS_RU

// Layer Alias
#define L_EN 0
#define L_RU 1
#define L_SYM 2
#define L_NUM 3

#define CHARS_EN &slto OS_EN L_EN
#define CHARS_RU &slto OS_RU L_RU
#define SYMBOLS &to L_SYM
#define NUMBERS &to L_NUM

//unused
#define SHFT &b_sht LSHIFT LSHIFT
#define CTRL &b_sht LCTRL LCTRL
#define ALT &b_sht LALT LALT
#define LANG &kp LA(SPACE)
#define SNAV_SPACE &kph 2 SPACE

/ {
    behaviors {

        //unused
        b_skqr: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <700>; // duration.extra-long1
            quick-release;
            ignore-modifiers;
        };

        //unused
        b_sht: sticky_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>; // duration.short3
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&b_skqr>;
        };

        //unused
        kph: space_system_navigation {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>; // duration.short3
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        /**
        * tap:        ь
        * double-tap: ъ
        */
        ru_sign: ru_sign_double_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "RU_SOFT_OR_HARD_SIGN";
            #binding-cells = <0>;
            tapping-term-ms = <150>; // duration.short3
            bindings = <&kp RU_SSIGN>, <&kp RU_HSIGN>;
        };

        /**
        * tap:        е
        * double-tap: ё
        */
        ru_ie_io: ru_ie_double_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "RU_IE_OR_IO";
            #binding-cells = <0>;
            tapping-term-ms = <150>; // duration.short3
            bindings = <&kp RU_IE>, <&kp RU_IO>;
        };

        /**
        * tap:        ш
        * double-tap: щ
        */
        ru_sha_scha: ru_sha_double_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "RU_SHA_OR_SHCHA";
            #binding-cells = <0>;
            tapping-term-ms = <150>; // duration.short3
            bindings = <&kp RU_SHA>, <&kp RU_SHCHA>;
        };

        /**
        * tap:        (
        * double-tap: )
        */
        par_lr: parenthesis_left_right {
            compatible = "zmk,behavior-tap-dance";
            label = "parenthesis_left_right";
            #binding-cells = <0>;
            tapping-term-ms = <150>; // duration.short3
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

       /**
        * tap:        [
        * double-tap: ]
        */
        bkt_lr: bracket_left_right {
            compatible = "zmk,behavior-tap-dance";
            label = "bracket_left_right";
            #binding-cells = <0>;
            tapping-term-ms = <150>; // duration.short3
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

       /**
        * tap:        {
        * double-tap: }
        */
        brc_lr: brace_left_right {
            compatible = "zmk,behavior-tap-dance";
            label = "brace_left_right";
            #binding-cells = <0>;
            tapping-term-ms = <150>; // duration.short3
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

       /**
        * tap:        >
        * double-tap: <
        */
        than_gl: greater_or_less_than {
            compatible = "zmk,behavior-tap-dance";
            label = "brace_left_right";
            #binding-cells = <0>;
            tapping-term-ms = <150>; // duration.short3
            bindings = <&kp GT>, <&kp LT>;
        };
    };

    macros {
        /**
        * Params:
        *  1. OS Language alias
        *  2. KB Layer alias
        *
        * Example:
        *  `&slto OS_EN L_EN`
        */
        slto: select_lang_and_go_to_layer {
            label = "SYNC_LANG_AND_LAYER";
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <32>;
            tap-ms = <32>;
            #binding-cells = <2>;
            bindings
                = 
                <&macro_param_1to1>,
                <&macro_tap &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 32>,
                <&macro_param_2to1>,
                <&macro_tap &to MACRO_PLACEHOLDER>
                ;
        };
    };

    /*                            KEY POSITIONS
    ╭────────────────────────╮                 ╭────────────────────────╮
    │  0   1   2   3   4   5 │                 │  6   7   8   9  10  11 │
    │ 12  13  14  15  16  17 ╰───────╮ ╭───────╯ 18  19  20  21  22  23 │
    │ 24  25  26  27  28  29  30  31 │ │ 32  33  34  35  36  37  38  39 │
    ╰───────────╮ 40  41  42  43  44 │ │ 45  46  47  48  49 ╭───────────╯
                ╰────────────────────╯ ╰────────────────────╯            */
/*
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            //layers = <0 1...>
        };
    };
*/

    keymap {
        compatible = "zmk,keymap";

        layer_en {
            bindings = <
                // ╭───┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                           ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───╮
                    XXX &kp Q         &kp W         &kp E         &kp R         &kp T                                                                     &kp Y         &kp U         &kp I         &kp O         &kp P         XXX  
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &kp A         &kp S         &kp D         &kp F         &kp G                                                                     &kp H         &kp J         &kp K         &kp L         XXX           XXX  
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┬─────────────╮   ╭─────────────┬─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &kp Z         &kp X         &kp C         &kp V         &kp B           OS_KB_EN       CHARS_RU          SYMBOLS       NUMBERS    &kp N         &kp M         XXX           XXX           &bt BT_CLR    XXX  
                // ╰───┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤─────────────┼─────────────┤   ├─────────────┼─────────────├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴───╯
                                                              XXX &kp LSHFT     &kp SPACE     &kp BSPC      &kp ENTER         &kp LALT      &kp DEL       &kp TAB       &kp LCTRL     XXX
                //                                           ╰───┴─────────────┴─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────┴─────────────┴───╯
            >;
        };

        layer_ru {
            bindings = <
                // ╭───┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                           ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───╮
                    XXX &kp RU_SI     &kp RU_TSE    &kp RU_U      &kp RU_KA     &ru_ie_io                                                                 &kp RU_EN     &kp RU_GHE    &ru_sha_scha  &kp RU_ZE     &kp RU_HA     XXX  
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &kp RU_EF     &kp RU_YERU   &kp RU_VE     &kp RU_A      &kp RU_PE                                                                 &kp RU_ER     &kp RU_O      &kp RU_EL     &kp RU_DE     &kp RU_ZHE    XXX  
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┬─────────────╮   ╭─────────────┬─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &kp RU_YA     &kp RU_CHE    &kp RU_ES     &kp RU_EM     &kp RU_I         CHARS_EN     OS_KB_RU           SYMBOLS       NUMBERS    &kp RU_TE     &ru_sign      &kp RU_BE     &kp RU_YU     &kp RU_E      XXX  
                // ╰───┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤─────────────┼─────────────┤   ├─────────────┼─────────────├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴───╯
                                                              XXX ___           ___           ___           ___               ___           ___           ___           ___           XXX
                //                                           ╰───┴─────────────┴─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────┴─────────────┴───╯
            >;
        };

        layer_symbols {
            bindings = <
                // ╭───┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                           ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───╮
                    XXX &kp APOS      &kp PRCNT     &kp AT_SIGN   &kp CARET     &kp AMPS                                                                 &kp GRAVE     &kp TILDE      &kp PLUS      &kp PIPE      XXX           XXX
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &bkt_lr       &par_lr       &kp MINUS     &than_gl      &kp COMMA                                                                 &kp COLON     &kp QMARK     &kp DOT       &kp UNDER     &kp SEMI      XXX  
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┬─────────────╮   ╭─────────────┬─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &kp FSLH      &kp STAR      &kp DLLR      &brc_lr       &kp DQT          CHARS_EN     CHARS_RU        XXX              NUMBERS    XXX           &kp EXCL      &kp EQUAL     &kp BSLH      &kp HASH      XXX  
                // ╰───┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤─────────────┼─────────────┤   ├─────────────┼─────────────├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴───╯
                                                              XXX ___           ___           ___           ___               ___           ___           ___           ___           XXX
                //                                           ╰───┴─────────────┴─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────┴─────────────┴───╯
            >;
        };

        layer_numbers {
            bindings = <
                // ╭───┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                           ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───╮
                    XXX &kp STAR      &kp N7        &kp N8        &kp N9        &kp PLUS                                                                  XXX           XXX           XXX           XXX           XXX           XXX  
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                           ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &kp N0        &kp N4        &kp N5        &kp N6        &kp EQUAL                                                                 &kp HOME      &kp LEFT      &kp UP        &kp RIGHT     &kp END       XXX  
                // ├───┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┬─────────────╮   ╭─────────────┬─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼───┤
                    XXX &kp FSLH      &kp N1        &kp N2        &kp N3        &kp MINUS        CHARS_EN     CHARS_RU           SYMBOLS    XXX           XXX           &kp PG_UP     &kp DOWN      &kp PG_DN     XXX           XXX  
                // ╰───┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤─────────────┼─────────────┤   ├─────────────┼─────────────├─────────────┼─────────────┼─────────────┴─────────────┴─────────────┴───╯
                                                              XXX ___           ___           ___           ___               ___           ___           ___           ___           XXX
                //                                           ╰───┴─────────────┴─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────┴─────────────┴───╯
            >;
        };

/*



        layer_games_qwerty {
             bindings = <
             &kp ESC   &kp N1    &kp N2 &kp N3 &kp N4 &kp N5                                  &kp N6 &kp N7         &kp N8         &kp N9          &kp N0 &kp BSPC
             &kp TAB   XXX       &kp Q  &kp W  &kp E  &kp R                                   &kp T  &kp Y          &kp UP_ARROW   &kp I           &kp O  &kp RET
             &kp GRAVE &kp LSHFT &kp A  &kp S  &kp D  &kp F &kp G     &kp H       &kp J &kp K &kp L  &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp P  &to 0
                                        &kp Z  &kp X  &kp C &kp LCTRL &kp SPACE   &kp V &kp B &kp N  &kp M          XXX
             >;
        };
*/
    };
};

/*
-----

~_



`'@+^
[(->,
\#${"

];&%|
:?.)]
<!=/*

-----
*/

