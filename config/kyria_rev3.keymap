/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keys_ru.h"

// Layers
#define L_HOME 0
#define L_NUM 1
#define L_SYM 2
#define L_SYS 3
#define L_GAME 4

// Variables
#define ___ &trans
#define XXX &none

#define MOD(keycode) LG(keycode)
#define SMART_SHFT &bt_sh LSHIFT LSHIFT
#define CHG_LANG LA(SPACE)

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <700>; // duration.extra-long1
            quick-release;
            ignore-modifiers;
        };

        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>; // duration.short4
            bindings = <&mt LC(C) C>, <&kp LS(C)>;
        };

        bt_sh: sticky_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>; // duration.short3
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&skq>, <&kp>;
        };
    };

    macros {
        mtll: toggle_lang_layer {
            compatible = "zmk,behavior-macro-one-param";
            label = "macro_toggle_lang_and_layer";
            #binding-cells = <1>;
            bindings = 
                <&kp CHG_LANG>,
                <&macro_param_1to1>,
                <&macro_press &tog MACRO_PLACEHOLDER>
            ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // |  -  |  Q  |  D  |  R  |  W  |  B  |                            |  J  |  F  |  U  |  P  |  ;  |  -  |
        // |  -  |  A  |  S  |  H  |  T  |  G  |                            |  Y  |  N  |  E  |  O  |  I  |  -  |
        // |  -  |  Z  |  X  |  M  |  C  |  V  |  -  |  -  |    |  -  |  -  |  K  |  L  |  ,  |  .  |  /  |  -  |
        //          |  -  |  SYS  |  SPACE  |  SHFT  |  -  |    |  -  |  -  |  -  |  -  |  -  |

        //layer_home_workman {
        //    bindings = <
        //    XXX &kp Q &kp D &kp R &kp W     &kp B                               &kp J     &kp F &kp U     &kp P   &kp SEMI XXX
        //    XXX &kp A &kp S &kp H &kp T     &kp G                               &kp Y     &kp N &kp E     &kp O   &kp I    XXX
        //    XXX &kp Z &kp X &kp M &kp C     &kp V     XXX        XXX    XXX XXX &kp K     &kp L &kp COMMA &kp DOT &kp FSLH XXX
        //                    XXX   &mo L_SYS &kp SPACE SMART_SHFT XXX    XXX XXX &to L_NUM XXX   XXX
        //    >;
        //};

        // |  -  |  Й  |  Ц  |  У  |  К  |  Е\Ё  |                            |  Н  |   Г   |  Ш  |  Щ  |  З  |  Х  |
        // |  -  |  Ф  |  Ы  |  В  |  А  |   П   |                            |  Р  |   О   |  Л  |  Д  |  Ж  |  Э  |
        // |  -  |  Я  |  Ч  |  С  |  М  |   И   |  -  |  -  |    |  -  |  -  |  Т  |  Ь\Ъ  |  Б  |  Ю  |  -  |  -  |

        layer_home {
            bindings = <
            XXX &kp Q &kp W &kp E &kp R &mt GRAVE T                            &kp Y &kp U &kp I &kp O &kp P &kp RU_CYRILLIC_HA
            XXX &kp A &kp S &kp D &kp F &kp G                                  &kp H &kp J &kp K &kp L &kp RU_CYRILLIC_ZHE &kp RU_CYRILLIC_E
            XXX &kp Z &kp X &kp C &kp V &kp B XXX        XXX           XXX XXX &kp N &mt RU_CYRILLIC_HARD_SIGN M &kp RU_CYRILLIC_BE  &kp RU_CYRILLIC_YU XXX XXX
                      XXX &mo L_SYS &kp SPACE SMART_SHFT XXX           XXX XXX &to L_NUM XXX XXX
            >;
        };

        layer_numbers {
            bindings = <
            XXX XXX    &kp N7 &kp N8 &kp N9 XXX                     XXX XXX XXX XXX &kp BSPC XXX
            XXX &kp N0 &kp N1 &kp N2 &kp N3 XXX                     XXX XXX XXX XXX &kp RET XXX
            XXX XXX    &kp N4 &kp N5 &kp N6 XXX XXX XXX     XXX XXX XXX XXX XXX XXX XXX XXX
                       ___    ___    ___    &to L_HOME ___ ___     ___ ___ &to L_SYM ___ ___
            >;
        };

        // !@#$%^&*()_-+=    \|/ ?., '" ;: []{}
        layer_symbols {
            bindings = <
            XXX &kp EXCL &kp AT   &kp LBKT &kp RBKT XXX                     XXX XXX XXX XXX &kp BSPC XXX
            XXX XXX      &kp APOS &kp LBRC &kp RBRC &kp DLLR                     XXX XXX XXX XXX &kp RET XXX
            XXX XXX      XXX      &kp LPAR &kp RPAR XXX      XXX XXX     XXX XXX XXX XXX XXX XXX XXX XXX
                       ___    ___    ___    &to L_HOME ___ ___     ___ ___ &to L_NUM ___ ___
            >;
        };
 
        layer_system_nav {
            bindings = <
            &kp CHG_LANG XXX         &kp MOD(N7) &kp MOD(N8) &kp MOD(N9) XXX                      XXX XXX XXX XXX XXX XXX
            XXX          &kp MOD(N0) &kp MOD(N1) &kp MOD(N2) &kp MOD(N3) XXX                      XXX XXX XXX XXX XXX XXX
            XXX          XXX         &kp MOD(N4) &kp MOD(N5) &kp MOD(N6) XXX XXX XXX      XXX XXX XXX XXX XXX XXX XXX XXX
                                              XXX         XXX         XXX XXX XXX      XXX XXX XXX XXX XXX
            >;
        };

        layer_games_qwerty {
             bindings = <
             &kp ESC   &kp N1    &kp N2 &kp N3 &kp N4 &kp N5                                  &kp N6 &kp N7         &kp N8         &kp N9          &kp N0 &kp BACKSPACE
             &kp TAB   XXX       &kp Q  &kp W  &kp E  &kp R                                   &kp T  &kp Y          &kp UP_ARROW   &kp I           &kp O  &kp ENTER
             &kp GRAVE &kp LSHFT &kp A  &kp S  &kp D  &kp F &kp G     &kp H       &kp J &kp K &kp L  &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp P  &to L_EN
                                        &kp Z  &kp X  &kp C &kp LCTRL &kp SPACE   &kp V &kp B &kp N  &kp M          XXX
             >;
        };

        // LAYER TEMPLATES

        // layer_name {
        //     bindings = <
        //     ___ ___ ___ ___ ___ ___                      ___ ___ ___ ___ ___ ___
        //     ___ ___ ___ ___ ___ ___                      ___ ___ ___ ___ ___ ___
        //     ___ ___ ___ ___ ___ ___ ___ ___      ___ ___ ___ ___ ___ ___ ___ ___
        //                 ___ ___ ___ ___ ___      ___ ___ ___ ___ ___
        //     >;
        // };

        // layer_name {
        //     bindings = <
        //     XXX XXX XXX XXX XXX XXX                      XXX XXX XXX XXX XXX XXX
        //     XXX XXX XXX XXX XXX XXX                      XXX XXX XXX XXX XXX XXX
        //     XXX XXX XXX XXX XXX XXX XXX XXX      XXX XXX XXX XXX XXX XXX XXX XXX
        //                 XXX XXX XXX XXX XXX      XXX XXX XXX XXX XXX
        //     >;
        // };
    };
};
